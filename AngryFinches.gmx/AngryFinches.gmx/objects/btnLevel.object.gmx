<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spHUD_btnLevel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Glangfa)
{
    sprite_index=spHUD_btnLevel_fa;
}
image_speed=0;

lvlno=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
tgl=lvl1;
switch(lvlno)
{
case 1: tgl=lvl1;
break;
case 2: tgl=lvl2;
break;
case 3: tgl=lvl3; 
break;
case 4: tgl=lvl4; 
break;
default: tgl=lvl1;
break;
}


Gclvlno=lvlno;
room_goto(tgl);
*/
if(lvlno&lt;=Glvlno)
LVL_goto(lvlno);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(image_index==1)
{
    draw_text(x,y,string(lvlno));
}

if(!Gcandragmap)
{
    if(Glvlno==lvlno)
    {
        if(x+sprite_width/2&gt;room_width)
        {
            with(btnLevel)do
            {
                hspeed=-(10);
                background_hspeed[1]=hspeed*1.1;
                background_hspeed[0]=hspeed*0.5;
            }
        }
        else if(x-sprite_width/2&lt;0)
        {
            with(btnLevel)do
            {
                hspeed=+(10);
                background_hspeed[1]=hspeed*1.1;
                background_hspeed[0]=hspeed*0.5;
            }
        }
        else
        {
            Gcandragmap=true;
        }
    }
    else if(Glvlno&gt;Glvlnomax || Glvlno&lt;=0)
    {
        Gcandragmap=true;
    }
}
else if(lvlno==1 &amp;&amp; x&gt;room_width)
{
    with(btnLevel)do
    {
        hspeed=-(30);
        background_hspeed[1]=hspeed*1.1;
        background_hspeed[0]=hspeed*0.5;
    }
}
else if(lvlno==Glvlnomax &amp;&amp; x&lt;0)
{
    with(btnLevel)do
    {
        hspeed=+(30);
        background_hspeed[1]=hspeed*1.1;
        background_hspeed[0]=hspeed*0.5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
